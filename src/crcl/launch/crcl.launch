<?xml version="1.0" encoding="UTF-8"?>
<launch>
   <!-- args supplied by calling roslaunch -->
    <arg name="my_ns" value="lrmate" /> 
    <arg name="package" value="$(eval find('fanuc_lrmate200id_support'))" />
    <arg name="robotxyz" value="-x -0.169 -y -1.140 -z 0.934191" />
    <arg name="dosimmove" value="true"/>
    <arg name="armgroup" value="fanucarm"/>
    <arg name="qtbreak" value="1"/>

   <!-- args used in this roslaunch -->
   <arg name="fake_execution" default="true" />
   <arg name="allow_trajectory_execution" default="true" />
   <arg name="max_safe_path_cost" default="1" />
   <arg name="jiggle_fraction" default="0.05" />
   <arg name="publish_monitored_planning_scene" default="false" />
   <arg name="capabilities" default="" />
   <arg name="disable_capabilities" default="" />
   <arg name="moveit_manage_controllers" default="false" />

   <!-- GDB Debug Option -->
   <arg name="debug" default="false" />
   <arg unless="$(arg debug)" name="launch_prefix" value="" />
   <arg if="$(arg debug)" name="launch_prefix" value="gdb -x $(arg package)/launch/gdb_settings.gdb --ex run --args" />
   <!-- Verbose Mode Option -->
   <arg name="info" default="true" />
   <arg unless="$(arg info)" name="command_args" value="" />
   <arg if="$(arg info)" name="command_args" value="--debug" />




   <group ns="$(arg my_ns)">
      <param name="robotxyz" value="$(arg robotxyz)" />
      <param name="robot_description" textfile="$(arg package)/urdf/lrmate200id.urdf" />
      <param name="robot_description_semantic" textfile="$(arg package)/config/fanuc_lrmate200id.srdf" />

      <!-- Load updated joint limits (override information from URDF) -->
      <group ns="robot_description_planning">
         <rosparam command="load" file="$(arg package)/config/joint_limits.yaml" />
      </group>

      <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace -->
      <group ns="robot_description_kinematics">
         <rosparam command="load" file="$(arg package)/config/kinematics.yaml" />
      </group>

      <param name="moveit_manage_controllers" value="$(arg moveit_manage_controllers)" />

      <!-- Set the param that trajectory_execution_manager needs to find the controller plugin -->
      <param name="moveit_controller_manager" value="moveit_fake_controller_manager/MoveItFakeControllerManager" />

      <!-- The rest of the params are specific to this plugin -->
      <rosparam file="$(arg package)/config/fake_controllers.yaml" command="load" />

      <!-- Load joint controller configurations from YAML file to parameter server 
      <rosparam file="$(arg package)/config/ros_controllers.yaml" command="load"/>-->

      <param name="trajectory_execution/allowed_execution_duration_scaling" value="1.2" />
      <param name="trajectory_execution/allowed_goal_duration_margin" value="0.5" />
      <param name="trajectory_execution/allowed_start_tolerance" value="0.01" />

      <rosparam file="$(arg package)/config/crcl.yaml" command="load" />
      <rosparam file="$(arg package)/config/kitting.yaml" command="load" />
 <!-- 
<include file="$(find fanuc_lrmate200id_support)/launch/gz.launch">
   <arg name="world_name" value="$(find fanuc_lrmate200id_support)/world/aprs-fanuc.world" />
</include> 
 -->
<!--     <node name="mojo" pkg="crclapp" 
           type="crclapp" 
           output="screen" 
           args="ns:=$(arg my_ns) name:=mojo robot:=fanuc_lrmate200id qtbreak:=$(arg qtbreak) armgroup:=$(arg armgroup)"
            >

       </node>
-->
   </group>


</launch>
